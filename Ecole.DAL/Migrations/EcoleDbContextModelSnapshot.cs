// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MonEcole.DAL.DataAccess;

namespace MonEcole.DAL.Migrations
{
    [DbContext(typeof(EcoleDbContext))]
    partial class EcoleDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MonEcole.DAL.DataModels.Ecole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ecoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nom = "St Exupéry"
                        });
                });

            modelBuilder.Entity("MonEcole.DAL.DataModels.Fonction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Libelle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Service")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Fonctions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Libelle = "Secretaire",
                            Service = "Administration"
                        },
                        new
                        {
                            Id = 2,
                            Libelle = "Educateur",
                            Service = "Equipe pedagogique"
                        },
                        new
                        {
                            Id = 3,
                            Libelle = "Directeur",
                            Service = "Administration"
                        },
                        new
                        {
                            Id = 4,
                            Libelle = "CPE",
                            Service = "Equipe pedagogique"
                        });
                });

            modelBuilder.Entity("MonEcole.DAL.DataModels.Matiere", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Coefficient")
                        .HasColumnType("int");

                    b.Property<string>("Libelle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Matieres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Coefficient = 8,
                            Libelle = "Mathematique"
                        },
                        new
                        {
                            Id = 2,
                            Coefficient = 9,
                            Libelle = "Francais"
                        },
                        new
                        {
                            Id = 3,
                            Coefficient = 2,
                            Libelle = "Sport"
                        },
                        new
                        {
                            Id = 4,
                            Coefficient = 7,
                            Libelle = "Science"
                        });
                });

            modelBuilder.Entity("MonEcole.DAL.DataModels.Personne", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateNaissance")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EcoleId")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("EcoleId");

                    b.ToTable("Personne");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Personne");
                });

            modelBuilder.Entity("MonEcole.DAL.DataModels.Administratif", b =>
                {
                    b.HasBaseType("MonEcole.DAL.DataModels.Personne");

                    b.Property<int?>("FonctionId")
                        .HasColumnType("int");

                    b.Property<decimal>("Salaire")
                        .HasColumnType("decimal(18,2)");

                    b.HasIndex("FonctionId");

                    b.HasDiscriminator().HasValue("Administratif");

                    b.HasData(
                        new
                        {
                            Id = 5,
                            DateNaissance = new DateTime(1989, 11, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EcoleId = 1,
                            Nom = "Sion",
                            Prenom = "Eva",
                            FonctionId = 3,
                            Salaire = 0m
                        });
                });

            modelBuilder.Entity("MonEcole.DAL.DataModels.Eleve", b =>
                {
                    b.HasBaseType("MonEcole.DAL.DataModels.Personne");

                    b.Property<int>("Moyenne")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Eleve");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateNaissance = new DateTime(2012, 9, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EcoleId = 1,
                            Nom = "Oumal",
                            Prenom = "Fabien",
                            Moyenne = 12
                        },
                        new
                        {
                            Id = 2,
                            DateNaissance = new DateTime(2009, 2, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EcoleId = 1,
                            Nom = "DePoheur",
                            Prenom = "Agathe",
                            Moyenne = 15
                        });
                });

            modelBuilder.Entity("MonEcole.DAL.DataModels.Professeur", b =>
                {
                    b.HasBaseType("MonEcole.DAL.DataModels.Personne");

                    b.Property<int>("MatiereId")
                        .HasColumnType("int");

                    b.Property<decimal>("Salaire")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Professeur_Salaire");

                    b.HasIndex("MatiereId");

                    b.HasDiscriminator().HasValue("Professeur");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            DateNaissance = new DateTime(1984, 4, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EcoleId = 1,
                            Nom = "Erie",
                            Prenom = "Yann",
                            MatiereId = 4,
                            Salaire = 0m
                        },
                        new
                        {
                            Id = 4,
                            DateNaissance = new DateTime(1978, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EcoleId = 1,
                            Nom = "Mobil",
                            Prenom = "Otto",
                            MatiereId = 3,
                            Salaire = 0m
                        });
                });

            modelBuilder.Entity("MonEcole.DAL.DataModels.Personne", b =>
                {
                    b.HasOne("MonEcole.DAL.DataModels.Ecole", "Ecole")
                        .WithMany("Personnes")
                        .HasForeignKey("EcoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ecole");
                });

            modelBuilder.Entity("MonEcole.DAL.DataModels.Administratif", b =>
                {
                    b.HasOne("MonEcole.DAL.DataModels.Fonction", "Fonction")
                        .WithMany()
                        .HasForeignKey("FonctionId");

                    b.Navigation("Fonction");
                });

            modelBuilder.Entity("MonEcole.DAL.DataModels.Professeur", b =>
                {
                    b.HasOne("MonEcole.DAL.DataModels.Matiere", "Matiere")
                        .WithMany()
                        .HasForeignKey("MatiereId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Matiere");
                });

            modelBuilder.Entity("MonEcole.DAL.DataModels.Ecole", b =>
                {
                    b.Navigation("Personnes");
                });
#pragma warning restore 612, 618
        }
    }
}
